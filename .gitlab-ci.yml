image: docker:1.10.3
services:
  - docker:dind
  - postgres:9.6
variables:
  DB_NAME: postgres
  DB_USER: postgres
  DB_PASSWORD: postgres

variables:
  DOCKER_DRIVER: overlay

before_script: ./.ci/before-script.sh

stages:
  - check
  - build
  - test
  - release
  - deploy

check_code:
  image: python:3
  stage: check
  script:
    - pip install 'coala-bears[alldeps]'
    - coala --ci
  except:
    - master

cache:
  paths:
  - /root/.cache/pip

build_image: &build_image
  stage: build
  script:
    - docker build -t $TEST_IMAGE_NAME .
    - docker login -e gitlab-ci@gitlab.com -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker push $TEST_IMAGE_NAME
  except:
   - master

build_image_ee:
  <<: *build_image
  before_script:
    - export TEST_IMAGE_NAME="registry.gitlab.com/$CI_PROJECT_PATH:$CI_COMMIT_SHA-ee"
  variables:
    GIT_SUBMODULE_STRATEGY: normal

run_tests: &run_tests
  stage: test
  script:
    - cp docker-compose.yml docker-compose.yml.orig
    - 'sed -i "s/build: ./image: $TEST_IMAGE_NAME/g" docker-compose.yml'
    - diff docker-compose.yml.orig docker-compose.yml
    - docker-compose run backend docker/run-tests.sh
  except:
  - master

run_tests_ee:
  <<: *run_tests
  before_script:
    - ./.ci/before-script.sh
    - export TEST_IMAGE_NAME="$TEST_IMAGE_NAME-ee"
  allow_failure: true

.push_image: &push_image
  stage: release
  script:
    - docker login -e gitlab-ci@gitlab.com -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - ./.ci/push_image.sh $TEST_IMAGE_NAME $TARGET_NAME
    - ./.ci/push_image.sh "$TEST_IMAGE_NAME-ee" "$TARGET_NAME-ee"
  only:
    - master

push_master_image:
  <<: *push_image
  before_script:
    - ./.ci/before_script.sh
    - export TARGET_NAME="$MASTER_NAME"

push_release_image:
  <<: *push_image
  before_script:
    - ./.ci/before_script.sh
    - export TARGET_NAME="$RELEASE_NAME"
  when: manual
  only:
    - master

deploy_master: &deploy_master
  stage: deploy
  image: debian:9
  script: .ci/deploy.sh
  environment:
    name: master
    url: https://api.master.gitmate.io
  dependencies:
    - push_master_image
  only:
    - master

deploy_release:
  <<: *deploy_master
  before_script:
    - export DEPLOY_RELEASE="YES"
  environment:
    name: release
    url: https://api.gitmate.io
  dependencies:
    - push_release_image
  when: manual
