image: docker:1.10.3
services:
  - docker:dind
  - postgres:9.6
variables:
  DB_NAME: postgres
  DB_USER: postgres
  DB_PASSWORD: postgres

variables:
  DOCKER_DRIVER: overlay

before_script:
  - export TEST_IMAGE_NAME=registry.gitlab.com/$CI_PROJECT_PATH:$CI_COMMIT_SHA
  - export MASTER_NAME=registry.gitlab.com/$CI_PROJECT_PATH:latest
  - export RELEASE_NAME=registry.gitlab.com/$CI_PROJECT_PATH:release
  - export WEBHOOK_SECRET=foobar
  - export COALA_RESULTS_IMAGE=registry.gitlab.com/gitmate/open-source/coala-incremental-results:latest
  - export RESULTS_BOUNCER_IMAGE=registry.gitlab.com/gitmate/open-source/result-bouncer:latest
  - export REBASER_IMAGE=egistry.gitlab.com/gitmate/open-source/mr-rebaser:latest
  - export BOT_TOKEN=foobar
  - export BOT_USER=foo

stages:
  - test
  - release
  - deploy

check_code:
  image: python:3
  stage: test
  script:
  - pip install 'coala-bears[alldeps]'
  - pip install -r requirements.txt
  - coala --ci
  except:
  - master

cache:
  paths:
  - /root/.cache/pip

run_tests:
  image: python:3
  stage: test
  script:
  - pip3 install -r requirements.txt
  - pip3 install -r test-requirements.txt
  - py.test -vv --cov --doctest-modules
  except:
  - master

build_image:
  stage: test
  script: ./.ci/build_image.sh
  except:
   - master

build_image_ee:
  stage: test
  script:
    - ./clone_ee.sh
    - export TEST_IMAGE_IMAGE="$TEST_IMAGE_NAME-ee"
    - ./.ci/build_image.sh
  except:
    - master

push_master_image:
  stage: release
  script:
    - export IMAGE_NAME="$MASTER_NAME"
    - ./.ci/push_image.sh
  only:
    - master

push_release_image:
  stage: release
  script:
    - export IMAGE_NAME="$RELEASE_NAME"
    - ./.ci/push_image.sh
  when: manual
  only:
    - master

push_master_image_ee:
  stage: release
  script:
    - export IMAGE_NAME="$MASTER_NAME-ee"
    - ./.ci/push_image.sh
  only:
    - master

push_release_image_ee:
  stage: release
  script:
    - export IMAGE_NAME="$RELEASE_NAME-ee"
    - ./.ci/push_image.sh
  when: manual
  only:
    - master

deploy_master:
  stage: deploy
  image: debian:9
  script:
    - which ssh-agent || (apt-get update -y && apt-get install -y --no-install-recommends openssh-client)
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$DEPLOY_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_SERVER_HOSTKEYS" > ~/.ssh/known_hosts
    - ssh tomoko@moon.gitmate.io 'bash -s' < .ci/deploy.master.sh
  environment:
    name: master
    url: https://api.master.gitmate.io
  dependencies:
    - push_master_image
  only:
    - master

deploy_release:
  stage: deploy
  image: debian:9
  script:
    - which ssh-agent || (apt-get update -y && apt-get install -y --no-install-recommends openssh-client)
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$DEPLOY_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_SERVER_HOSTKEYS" > ~/.ssh/known_hosts
    - ssh tomoko@moon.gitmate.io 'bash -s' < .ci/deploy.release.sh
  environment:
    name: release
    url: https://api.gitmate.io
  dependencies:
    - push_release_image
  when: manual
  only:
    - master
